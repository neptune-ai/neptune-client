from typing import (
    Any,
    Optional,
    Union,
)

from neptune import Run
from neptune.handler import Handler

class NeptuneCallback:
    order: int
    neptune_run: Union[Run, Handler]
    fit_index: int
    def __init__(
        self,
        run: Union[Run, Handler],
        base_namespace: str = ...,
        upload_saved_models: Optional[str] = ...,
        **kwargs: Any,
    ) -> None: ...
    @property
    def name(self) -> str: ...
    def after_create(self) -> None: ...
    def before_fit(self) -> None: ...
    def before_batch(self) -> None: ...
    def after_batch(self) -> None: ...
    def after_train(self) -> None: ...
    def after_validate(self) -> None: ...
    def after_epoch(self) -> None: ...
    def after_fit(self) -> None: ...

def retrieve_fit_index(run: Run, path: str) -> int: ...
