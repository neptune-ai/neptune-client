---
name: Test Unit
description: Check unit tests
inputs:
  python-version:
    description: "Python version"
    required: true
  os:
    description: "Operating system"
    required: true
  report_job:
    description: "Job name to update by JUnit report"
    required: true
  coverage-artifacts-name:
    description: "Artifact name for storing coverage report"
    required: false
    default: unit-coverage
  codecov-token:
    description: "Codecov token"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Install package
      uses: ./.github/actions/install-package
      with:
        python-version: ${{ inputs.python-version }}
        os: ${{ inputs.os }}

    - name: Test
      run: |
        coverage run -p -m pytest -v -n 2 ./tests/unit/ \
        --timeout=120 --timeout_method=thread \
        --junitxml="./test-results/test-unit-new-${{ inputs.os }}-${{ inputs.python-version }}.xml"
      shell: bash

    - name: Prepare coverage report
      run: coverage combine --keep && coverage xml
      shell: bash

    - name: Upload Pull Request coverage report do Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.codecov-token }}
        files: ./coverage.xml
        flags: unit-pull-request
        fail_ci_if_error: false

    - name: Upload test coverage artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ${{ inputs.coverage-artifacts-name }}
        path: ./.coverage*

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-artifacts
        path: ./test-results

    - name: Report
      uses: mikepenz/action-junit-report@v3.6.2
      if: always()
      with:
        report_paths: './test-results/test-unit-*.xml'
        update_check: true
        include_passed: true
        annotate_notice: true
        job_name: ${{ inputs.report_job }}
