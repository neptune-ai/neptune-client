name: e2e

on:
  workflow_call:
    inputs:
      neptune_ref:
        description: 'Reference to neptune-client branch to use while running e2e tests (can be a branch, tag, or commit SHA)'
        type: string
        required: false
  workflow_dispatch:
  push:
    branches:
      - dev/1.x

env:
  WORKSPACE_NAME: ${{ vars.E2E_WORKSPACE_NAME }}
  BUCKET_NAME: ${{ secrets.E2E_BUCKET_NAME }}
  USER_USERNAME: ${{ vars.E2E_USER_USERNAME }}
  ADMIN_USERNAME: ${{ vars.E2E_ADMIN_USERNAME }}
  ADMIN_NEPTUNE_API_TOKEN: ${{ secrets.E2E_ADMIN_NEPTUNE_API_TOKEN }}
  SERVICE_ACCOUNT_NAME: ${{ vars.E2E_SERVICE_ACCOUNT_NAME }}

jobs:
  set_neptune_ref:
    uses: ./.github/workflows/set-neptune-ref.yml
    with:
      workflow_call_input_neptune_ref: ${{ inputs.neptune_ref }}
  e2e:
    environment: "Production 1.x"
    needs: [ set_neptune_ref ]
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.12" ]
        os: [ ubuntu, windows ]
        include:
          - python-version:  "3.8"
            os: macos
          - python-version: "3.12"
            os: macos
    runs-on: ${{ matrix.os }}-latest
    name: 'standard (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.E2E_SERVICE_ACCOUNT_API_TOKEN }}
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: "not s3 and not integrations"
          name: "standard"
          report_job: 'standard (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e_management:
    environment: "Production 1.x"
    needs: [ set_neptune_ref ]
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.12" ]
        os: [ ubuntu, windows ]
        include:
          - python-version:  "3.8"
            os: macos
          - python-version: "3.12"
            os: macos
    runs-on: ${{ matrix.os }}-latest
    name: 'management (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.E2E_USER_API_TOKEN }}
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: management
          name: management
          report_job: 'management (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e_s3_gcs:
    environment: "Production 1.x"
    needs: [ set_neptune_ref ]
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.12" ]
        os: [ ubuntu, windows ]
        include:
          - python-version:  "3.8"
            os: macos
          - python-version: "3.12"
            os: macos
    runs-on: ${{ matrix.os }}-latest
    name: 's3-gcs (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.E2E_SERVICE_ACCOUNT_API_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.E2E_GCS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_GCS_SECRET_ACCESS_KEY }}
          S3_ENDPOINT_URL: "https://storage.googleapis.com/"
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: s3
          name: s3-gcs
          report_job: 's3-gcs (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e_s3:
    environment: "Production 1.x"
    needs: [ set_neptune_ref ]
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.12" ]
        os: [ ubuntu, windows ]
        include:
          - python-version:  "3.8"
            os: macos
          - python-version: "3.12"
            os: macos
    runs-on: ${{ matrix.os }}-latest
    name: 's3 (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.E2E_SERVICE_ACCOUNT_API_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.E2E_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_AWS_SECRET_ACCESS_KEY }}
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: s3
          name: s3
          report_job: 's3 (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e-tests-notify:
    needs: [ e2e, e2e_management, e2e_s3_gcs, e2e_s3, set_neptune_ref ]
    runs-on: ubuntu-latest
    if: (success() || failure()) && (github.event_name == 'push' || github.event_name == 'schedule')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}

      - name: Notify
        uses: ./.github/actions/workflow-notify-v2
        with:
          slack-webhook: ${{ secrets.E2E_REGULAR_SLACK_WEBHOOK }}
          neptune-ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}
