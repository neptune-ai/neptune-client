[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "default-unprefixed"

[tool.poetry.dependencies]
python = "^3.7"

# Python lack of functionalities from future versions
importlib-metadata = { version = "*", python = "<3.8" }
typing-extensions = ">=3.10.0"

# Missing compatibility layer between Python 2 and Python 3
six = ">=1.12.0"
future = ">=0.17.1"

# Utility
packaging = "*"
click = ">=7.0"

# Networking
bravado = "^11.0.0"
oauthlib = ">=2.1.0"
PyJWT = "*"
requests = ">=2.20.0"
requests-oauthlib = ">=1.0.0"
websocket-client = ">=0.35.0, !=1.0.0"
urllib3 = "*"
swagger-spec-validator = ">=2.7.4"

# Built-in integrations
boto3 = ">=1.28.0"
Pillow = ">=1.1.6"
GitPython = ">=2.0.8"
psutil = "*"
pandas = "*"

# Additional integrations
kedro-neptune = { version = "*", optional = true, python = "<3.11" }
neptune-detectron2 = { version = "*", optional = true, python = ">=3.7"}
neptune-fastai = { version = "*", optional = true }
neptune-lightgbm = { version = "*", optional = true }
pytorch-lightning = { version = "*", optional = true }
neptune-optuna = { version = "*", optional = true }
neptune-prophet = { version = "*", optional = true }
neptune-pytorch = { version = "*", optional = true }
neptune-sacred = { version = "*", optional = true }
neptune-sklearn = { version = "*", optional = true }
neptune-tensorflow-keras = { version = "*", optional = true }
neptune-tensorboard = { version = "*", optional = true }
neptune-xgboost = { version = "*", optional = true }
transformers = { version = "*", optional = true }
zenml = { version = "*", optional = true }
mosaicml = { version = "*", optional = true }
neptune-aws = { version = "*", optional = true }
neptune-mlflow = { version = "*", optional = true }
neptune-airflow = { version = "*", optional = true }

[tool.poetry.extras]
aws = ["neptune-aws"]
detectron2 = ["neptune-detectron2"]
fastai = ["neptune-fastai"]
kedro = ["kedro-neptune"]
lightgbm = ["neptune-lightgbm"]
optuna = ["neptune-optuna"]
prophet = ["neptune-prophet"]
pytorch = ["neptune-pytorch"]
pytorch-lightning = ["pytorch-lightning"]
sacred = ["neptune-sacred"]
sklearn = ["neptune-sklearn"]
tensorflow-keras = ["neptune-tensorflow-keras"]
tensorboard = ["neptune-tensorboard"]
transformers = ["transformers"]
xgboost = ["neptune-xgboost"]
zenml = ["zenml"]
mosaicml = ["mosaicml"]
mlflow = ["neptune-mlflow"]
airflow = ["neptune-airflow"]
experimental = ["neptune-experimental"]

[tool.poetry]
authors = ["neptune.ai <contact@neptune.ai>"]
description = "Neptune Client"
repository = "https://github.com/neptune-ai/neptune-client"
homepage = "https://neptune.ai/"
documentation = "https://docs.neptune.ai/"
include = ["CHANGELOG.md"]
license = "Apache License 2.0"
name = "neptune"
readme = "README.md"
version = "1.0.0"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "MLOps",
    "ML Experiment Tracking",
    "ML Model Registry",
    "ML Model Store",
    "ML Metadata Store",
]
packages = [
    { include = "neptune", from = "src" },
]

[tool.poetry.urls]
"Tracker" = "https://github.com/neptune-ai/neptune-client/issues"
"Documentation" = "https://docs.neptune.ai/"

[tool.poetry.scripts]
neptune = "neptune.cli.__main__:main"

[tool.black]
line-length = 120
target-version = ['py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
force_grid_wrap = 2

[tool.flake8]
max-line-length = 120
extend-ignore = "E203"

[tool.mypy]
files = 'src/neptune'
mypy_path = "stubs"
install_types = "True"
non_interactive = "True"
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
show_error_codes = "True"
warn_unused_ignores = "True"

[[tool.mypy.overrides]]
module = [
    "neptune.api.exceptions_utils",
    "neptune.metadata_containers.abstract",
    "neptune.types.value_copy",
    "neptune.types.namespace",
    "neptune.types.file_set",
    "neptune.types.mode",
    "neptune.types.series.series_value",
    "neptune.types.atoms.file",
    "neptune.types.atoms.datetime",
    "neptune.types.atoms.boolean",
    "neptune.types.atoms.float",
    "neptune.types.atoms.integer",
    "neptune.types.atoms.string",
    "neptune.types.atoms.artifact",
    "neptune.types.series.float_series",
    "neptune.types.series.string_series",
    "neptune.types.series.file_series",
    "neptune.types.series.series",
    "neptune.types.sets.string_set",
    "neptune.attributes.atoms.artifact",
    "neptune.attributes.atoms.boolean",
    "neptune.attributes.atoms.copiable_atom",
    "neptune.attributes.atoms.datetime",
    "neptune.attributes.atoms.file",
    "neptune.attributes.atoms.float",
    "neptune.attributes.atoms.integer",
    "neptune.attributes.atoms.string",
    "neptune.attributes.attribute",
    "neptune.attributes.file_set",
    "neptune.attributes.namespace",
    "neptune.attributes.series.fetchable_series",
    "neptune.attributes.series.file_series",
    "neptune.attributes.series.float_series",
    "neptune.attributes.series.series",
    "neptune.attributes.series.string_series",
    "neptune.attributes.sets.string_set",
    "neptune.attributes.utils",
    "neptune.common.backends.utils",
    "neptune.common.exceptions",
    "neptune.common.git_info",
    "neptune.common.hardware.cgroup.cgroup_filesystem_reader",
    "neptune.common.hardware.cgroup.cgroup_monitor",
    "neptune.common.hardware.gauges.cpu",
    "neptune.common.hardware.gauges.gauge",
    "neptune.common.hardware.gauges.gauge_factory",
    "neptune.common.hardware.gauges.gpu",
    "neptune.common.hardware.gauges.memory",
    "neptune.common.hardware.gpu.gpu_monitor",
    "neptune.common.hardware.metrics.metric",
    "neptune.common.hardware.metrics.metrics_container",
    "neptune.common.hardware.metrics.metrics_factory",
    "neptune.common.hardware.metrics.reports.metric_reporter",
    "neptune.common.hardware.metrics.reports.metric_reporter_factory",
    "neptune.common.hardware.metrics.service.metric_service",
    "neptune.common.hardware.metrics.service.metric_service_factory",
    "neptune.common.hardware.resources.gpu_card_indices_provider",
    "neptune.common.hardware.resources.system_resource_info",
    "neptune.common.hardware.resources.system_resource_info_factory",
    "neptune.common.hardware.system.system_monitor",
    "neptune.common.oauth",
    "neptune.common.patches.bravado",
    "neptune.common.storage.datastream",
    "neptune.common.storage.storage_utils",
    "neptune.common.utils",
    "neptune.common.warnings",
    "neptune.common.websockets.reconnecting_websocket",
    "neptune.common.websockets.websocket_client_adapter",
    "neptune.exceptions",
    "neptune.handler",
    "neptune.integrations.python_logger",
    "neptune.integrations.utils",
    "neptune.internal.types.stringify_value",
    "neptune.internal.types.file_types",
    "neptune.internal.artifacts.drivers.local",
    "neptune.internal.artifacts.drivers.s3",
    "neptune.internal.artifacts.file_hasher",
    "neptune.internal.artifacts.local_file_hash_storage",
    "neptune.internal.artifacts.types",
    "neptune.internal.backends.api_model",
    "neptune.internal.backends.hosted_artifact_operations",
    "neptune.internal.backends.hosted_client",
    "neptune.internal.backends.hosted_file_operations",
    "neptune.internal.backends.hosted_neptune_backend",
    "neptune.internal.backends.neptune_backend",
    "neptune.internal.backends.neptune_backend_mock",
    "neptune.internal.backends.offline_neptune_backend",
    "neptune.internal.backends.operation_api_name_visitor",
    "neptune.internal.backends.operation_api_object_converter",
    "neptune.internal.backends.operations_preprocessor",
    "neptune.internal.backends.project_name_lookup",
    "neptune.internal.backends.swagger_client_wrapper",
    "neptune.internal.backends.utils",
    "neptune.internal.backgroud_job_list",
    "neptune.internal.background_job",
    "neptune.internal.container_structure",
    "neptune.internal.credentials",
    "neptune.internal.hardware.gpu.gpu_monitor",
    "neptune.internal.hardware.hardware_metric_reporting_job",
    "neptune.internal.id_formats",
    "neptune.internal.init.model",
    "neptune.internal.init.model_version",
    "neptune.internal.init.project",
    "neptune.internal.init.run",
    "neptune.internal.notebooks.comm",
    "neptune.internal.notebooks.notebooks",
    "neptune.internal.operation",
    "neptune.internal.streams.std_capture_background_job",
    "neptune.internal.streams.std_stream_capture_logger",
    "neptune.internal.threading.daemon",
    "neptune.internal.utils.deprecation",
    "neptune.internal.utils.generic_attribute_mapper",
    "neptune.internal.utils.git",
    "neptune.internal.utils.hashing",
    "neptune.internal.utils.images",
    "neptune.internal.utils.limits",
    "neptune.internal.utils.logger",
    "neptune.internal.utils.ping_background_job",
    "neptune.internal.utils.process_killer",
    "neptune.internal.utils.run_state",
    "neptune.internal.utils.runningmode",
    "neptune.internal.utils.s3",
    "neptune.internal.utils.source_code",
    "neptune.internal.utils.traceback_job",
    "neptune.internal.utils.uncaught_exception_handler",
    "neptune.internal.websockets.websocket_signals_background_job",
    "neptune.internal.websockets.websockets_factory",
    "neptune.legacy",
    "neptune.legacy.api_exceptions",
    "neptune.legacy.backend",
    "neptune.legacy.checkpoint",
    "neptune.legacy.exceptions",
    "neptune.legacy.experiments",
    "neptune.legacy.internal.abort",
    "neptune.legacy.internal.api_clients.backend_factory",
    "neptune.legacy.internal.api_clients.client_config",
    "neptune.legacy.internal.api_clients.credentials",
    "neptune.legacy.internal.api_clients.hosted_api_clients.hosted_alpha_leaderboard_api_client",
    "neptune.legacy.internal.api_clients.hosted_api_clients.hosted_backend_api_client",
    "neptune.legacy.internal.api_clients.hosted_api_clients.mixins",
    "neptune.legacy.internal.api_clients.hosted_api_clients.utils",
    "neptune.legacy.internal.api_clients.offline_backend",
    "neptune.legacy.internal.channels.channels",
    "neptune.legacy.internal.channels.channels_values_sender",
    "neptune.legacy.internal.execution.execution_context",
    "neptune.legacy.internal.notebooks.comm",
    "neptune.legacy.internal.notebooks.notebooks",
    "neptune.legacy.internal.streams.channel_writer",
    "neptune.legacy.internal.streams.stdstream_uploader",
    "neptune.legacy.internal.threads.aborting_thread",
    "neptune.legacy.internal.threads.hardware_metric_reporting_thread",
    "neptune.legacy.internal.threads.neptune_thread",
    "neptune.legacy.internal.threads.ping_thread",
    "neptune.legacy.internal.utils.alpha_integration",
    "neptune.legacy.internal.utils.deprecation",
    "neptune.legacy.internal.utils.http",
    "neptune.legacy.internal.utils.http_utils",
    "neptune.legacy.internal.utils.image",
    "neptune.legacy.internal.utils.source_code",
    "neptune.legacy.internal.websockets.message",
    "neptune.legacy.internal.websockets.reconnecting_websocket_factory",
    "neptune.legacy.internal.websockets.websocket_message_processor",
    "neptune.legacy.model",
    "neptune.legacy.notebook",
    "neptune.legacy.projects",
    "neptune.legacy.sessions",
    "neptune.logging.logger",
    "neptune.management.exceptions",
    "neptune.management.internal.api",
    "neptune.management.internal.dto",
    "neptune.management.internal.utils",
    "neptune.metadata_containers.metadata_container",
    "neptune.metadata_containers.model",
    "neptune.metadata_containers.model_version",
    "neptune.metadata_containers.project",
    "neptune.metadata_containers.run",
    "neptune.new._compatibility",
    "neptune.types.type_casting",
    "neptune.vendor.pynvml",
    "neptune.api.requests_utils",
    "neptune.version",
    "neptune.internal.container_type",
    "neptune.new",
    "neptune.common.patches",
    "neptune.internal.utils",
    "neptune.integrations.tensorboard",
    "neptune.integrations.pytorch_lightning",
    "neptune.integrations.pytorch",
    "neptune.integrations.aws",
    "neptune.integrations.detectron2",
    "neptune.integrations.fastai",
    "neptune.integrations.kedro",
    "neptune.integrations.lightgbm",
    "neptune.integrations.optuna",
    "neptune.integrations.prophet",
    "neptune.integrations.sacred",
    "neptune.integrations.sklearn",
    "neptune.integrations.tensorflow_keras",
    "neptune.integrations.transformers",
    "neptune.integrations.xgboost",
]
ignore_errors = "True"
