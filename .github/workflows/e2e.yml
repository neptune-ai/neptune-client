name: e2e

on:
  workflow_call:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *" # Run every day at arbitrary time (4:00 AM UTC)
  push:
    branches:
      - master

env:
  WORKSPACE_NAME: e2e-tests
  BUCKET_NAME: ${{ secrets.E2E_BUCKET_NAME }}
  USER_USERNAME: ${{ secrets.E2E_USER_USERNAME }}
  ADMIN_USERNAME: ${{ secrets.E2E_ADMIN_USERNAME }}
  ADMIN_NEPTUNE_API_TOKEN: ${{ secrets.E2E_ADMIN_NEPTUNE_API_TOKEN }}
  SERVICE_ACCOUNT_NAME: ${{ secrets.E2E_SERVICE_ACCOUNT_NAME }}

jobs:
  e2e:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu, windows ]
        include:
          - python-version:  "3.7.16"
            os: macos
          - python-version: "3.10"
            os: macos
    runs-on: ${{ matrix.os }}-latest
    name: 'standard (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{secrets.E2E_SERVICE_ACCOUNT_API_TOKEN}}
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: "not s3 and not integrations"
          name: "standard"
          report_job: 'standard (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e_management:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu, windows ]
        include:
          - python-version:  "3.7.16"
            os: macos
          - python-version: "3.10"
            os: macos
    runs-on: ${{ matrix.os }}-latest
    name: 'management (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{secrets.E2E_NEPTUNE_API_TOKEN}}
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: management
          name: management
          report_job: 'management (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e_s3_gcs:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu, windows ]
        include:
          - python-version:  "3.7.16"
            os: macos
          - python-version: "3.10"
            os: macos
    runs-on: ${{ matrix.os }}-latest
    name: 's3-gcs (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{secrets.E2E_SERVICE_ACCOUNT_API_TOKEN}}
          AWS_ACCESS_KEY_ID: ${{secrets.E2E_GCS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.E2E_GCS_SECRET_ACCESS_KEY}}
          S3_ENDPOINT_URL: "https://storage.googleapis.com/"
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: s3
          name: s3-gcs
          report_job: 's3-gcs (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e_s3:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu, windows ]
        include:
          - python-version:  "3.7.16"
            os: macos
          - python-version: "3.10"
            os: macos
    runs-on: ${{ matrix.os }}-latest
    name: 's3 (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{secrets.E2E_SERVICE_ACCOUNT_API_TOKEN}}
          AWS_ACCESS_KEY_ID: ${{secrets.E2E_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.E2E_AWS_SECRET_ACCESS_KEY}}
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: s3
          name: s3
          report_job: 's3 (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  e2e-tests-notify:
    needs: [ e2e, e2e_management, e2e_s3_gcs, e2e_s3 ]
    runs-on: ubuntu-latest
    if: (success() || failure()) && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Notify
        uses: ./.github/actions/workflow-notify
        with:
          slack-webhook: ${{ secrets.E2E_REGULAR_SLACK_WEBHOOK }}
