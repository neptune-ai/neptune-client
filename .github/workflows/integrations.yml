name: integrations tests

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *" # Run every day at arbitrary time (6:00 AM UTC)
  push:
    branches-ignore:
      - master

env:
  BUCKET_NAME: ""
  USER_USERNAME: ""
  ADMIN_USERNAME: ""
  ADMIN_NEPTUNE_API_TOKEN: ""
  SERVICE_ACCOUNT_NAME: ""
  WORKSPACE_NAME: e2e-tests
  NEPTUNE_PROJECT: e2e-tests/integrations

jobs:
  fastai:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    name: 'fastai (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Test
      uses: ./.github/actions/test-remote-integration
      with:
        python-version: ${{ matrix.python-version }}
        os: ${{ matrix.os }}
        repository-name: neptune-fastai

  kedro:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    name: 'kedro (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Test
      uses: ./.github/actions/test-remote-integration
      with:
        python-version: ${{ matrix.python-version }}
        os: ${{ matrix.os }}
        repository-name: kedro-neptune

  prophet:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    name: 'prophet (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Test
      uses: ./.github/actions/test-remote-integration
      with:
        python-version: ${{ matrix.python-version }}
        os: ${{ matrix.os }}
        repository-name: neptune-prophet

  keras:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    name: 'keras (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Tests
      uses: ./.github/actions/test-remote-integration
      with:
        python-version: ${{ matrix.python-version }}
        os: ${{ matrix.os }}
        repository-name: neptune-tensorflow-keras

  lightning:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    name: 'lightning (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.E2E_SERVICE_ACCOUNT_API_TOKEN }}
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: lightning
          report_job: 'lightning (${{ matrix.os }} - py${{ matrix.python-version }})'

  huggingface:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    name: 'huggingface (${{ matrix.os }} - py${{ matrix.python-version }})'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Test
        uses: ./.github/actions/test-e2e
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.E2E_SERVICE_ACCOUNT_API_TOKEN }}
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          module: huggingface
          report_job: 'huggingface (${{ matrix.os }} - py${{ matrix.python-version }})'
