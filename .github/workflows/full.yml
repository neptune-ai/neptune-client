name: All
on:
  push:
    branches:
      - master
    tags:
      - '*'
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *' # Run every day at arbitrary time (6:00 AM UTC)
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Lint
        uses: ./.github/actions/lint

  # Both integration tests and E2E
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
        include:
          - os: ubuntu-latest
            python-version: 3.9
          - os: macos-latest
            python-version: 3.9
    env:
      WORKSPACE_NAME: e2e-tests
      BUCKET_NAME: ${{ secrets.E2E_BUCKET_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.E2E_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_AWS_SECRET_ACCESS_KEY }}
      USER_USERNAME: ${{ secrets.E2E_USER_USERNAME }}
      NEPTUNE_API_TOKEN: ${{ secrets.E2E_NEPTUNE_API_TOKEN }}
      ADMIN_USERNAME: ${{ secrets.E2E_ADMIN_USERNAME }}
      ADMIN_NEPTUNE_API_TOKEN: ${{ secrets.E2E_ADMIN_NEPTUNE_API_TOKEN }}
      # Time before went into offline mode
      # Default is 1 minute, and it made most of the tests to failure
      # as it takes some time to create project and all internal structures
      NEPTUNE_RETRIES_TIMEOUT: 600
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Some tests are checking version of 'neptune' package.
          # To simplify deployment we're using 'versioneer' but
          # when working with branches it yields "0+unknown".
          # Fetching all history fetches also last tag and helps versioneer
          fetch-depth: 0

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt -r requirements/e2e_requirements.txt

      - name: Integration tests
        run: |
          pytest ./tests

      - name: E2E - Client
        if: matrix.os != 'windows-latest'
        run: |
          pytest ./e2e_tests -m "not integrations"

      - name: E2E - Integrations
        if: matrix.os != 'windows-latest'
        run: |
          pytest ./e2e_tests -m integrations

      - name: Test Fast.ai integration
        if: matrix.os != 'windows-latest'
        uses: neptune-ai/neptune-fastai/.github/actions/e2e@master
        with:
          working_directory: neptune_fastai
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.E2E_NEPTUNE_API_TOKEN }}
          NEPTUNE_PROJECT: e2e-tests/e2e

      - name: Test Kedro integration
        if: matrix.os == 'ubuntu-latest' && matrix.python-version != '3.9'
        uses: neptune-ai/kedro-neptune/.github/actions/e2e@main
        with:
          working_directory: neptune_kedro
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.E2E_NEPTUNE_API_TOKEN }}
          NEPTUNE_PROJECT: e2e-tests/kedro-neptune-e2e

  notify:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: always()
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: technote-space/workflow-conclusion-action@v2

      - name: Notify about failure
        uses: 8398a7/action-slack@v3
        if: env.WORKFLOW_CONCLUSION != 'success'
        with:
          status: failure
          fields: repo,message,author,workflow,eventName,took

      - name: Notify about success
        uses: 8398a7/action-slack@v3
        if: env.WORKFLOW_CONCLUSION == 'success'
        with:
          status: success
          fields: repo,message,author,workflow,eventName,took

  publish:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Build and test
        run: |
          python setup.py sdist

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@54b39fb9371c0b3a6f9f14bb8a67394defc7a806
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
