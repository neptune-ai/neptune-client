---
name: Notify about workflow status
description: Send Slack channel notification about workflow finish status
inputs:
  slack-webhook:
    description: "A Slack Webhook to post a notification"
    required: true

runs:
  using: "composite"
  steps:
    #- uses: technote-space/workflow-conclusion-action@v3

    - name: Set production field
      outputs:
        production: ${{ steps.set-production.outputs.production }}
      id: set-production
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
          echo "production=Production 1.x" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/dev/1.x" ]]; then
          echo "production=Production" >> $GITHUB_ENV
        else
          echo "production=Unknown" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Notify about success
      needs: [ set-production ]
      uses: 8398a7/action-slack@v3
      #if: env.WORKFLOW_CONCLUSION == 'success'
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook }}
      with:
        status: custom
        custom_payload: |
          {
            "text": "*Workflow Status: ${{ env.WORKFLOW_CONCLUSION }}*",
            "attachments": [
              {
                "color": "#36a64f",
                "fields": [
                  {
                    "title": "Repository",
                    "value": "${{ process.env.AS_REPO }}",
                    "short": true
                  },
                  {
                    "title": "Message",
                    "value": "${{ process.env.AS_MESSAGE }}",
                    "short": false
                  },
                  {
                    "title": "Author",
                    "value": "${{ process.env.AS_AUTHOR }}",
                    "short": true
                  },
                  {
                    "title": "Job",
                    "value": "${{ process.env.AS_JOB }}",
                    "short": true
                  },
                  {
                    "title": "Event Name",
                    "value": "${{ process.env.AS_EVENTNAME }}",
                    "short": true
                  },
                  {
                    "title": "Took",
                    "value": "${{ process.env.AS_TOOK }}",
                    "short": true
                  },
                  {
                    "title": "Production",
                    "value": "${{ needs.set-production.outputs.production }}",
                    "short": true
                  }
                ]
              }
            ]
          }
