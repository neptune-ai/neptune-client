name: unit

on:
  workflow_call:
    inputs:
      neptune_ref:
        description: 'Reference to neptune-client branch to use while running unit tests (can be a branch, tag, or commit SHA)'
        type: string
        required: true
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *" # Run every day at arbitrary time (4:00 AM UTC)
  push:
    branches:
      - dev/1.x
      - ss/checkout-before-integrations  # remove later

jobs:
  set_neptune_ref:
    runs-on: ubuntu-latest
    outputs:
      neptune_ref: ${{ steps.set_neptune_ref.outputs.neptune_ref }}
    steps:
      - name: Set neptune_ref env variable
        id: set_neptune_ref
        run: |
          if [ ${{ github.event_name }} == 'workflow_call' ]; then
            echo "neptune_ref=${{ inputs.neptune_ref }}" >> $GITHUB_ENV
          elif [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            echo "neptune_ref=${{ github.ref }}" >> $GITHUB_ENV
          elif [ ${{ github.event_name }} == 'push' ]; then
            echo "neptune_ref=${{ github.ref }}" >> $GITHUB_ENV
          else
            echo ERROR: Unknown event name ${{ github.event_name }}
            exit 1
          fi
        shell: bash
      - name: Read debug variables
        run: |
          echo "github.event_name=${{ github.event_name }}"
          echo "steps.set_neptune_ref.outputs.neptune_ref=${{ steps.set_neptune_ref.outputs.neptune_ref }}"
          echo "env.neptune_ref=${{ env.neptune_ref }}"
  print_inputs:
    needs: [ set_neptune_ref ]
    runs-on: ubuntu-latest
    steps:
      - name: Print inputs
        run: |
          echo "inputs.neptune_ref: ${{ inputs.neptune_ref }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.event.client_payload.pull_request.head.ref: ${{ github.event.client_payload.pull_request.head.ref }}"
          echo "github.event_name: ${{ github.event_name }}"
          echo "needs.set_neptune_ref.outputs.neptune_ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}"
  test:
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu, windows]
        include:
          - python-version: "3.7.16"
            os: macos
          - python-version: "3.8"
            os: macos
          - python-version: "3.9"
            os: macos
          - python-version: "3.10"
            os: macos
          - python-version: "3.11"
            os: macos
          - python-version: "3.12"
            os: macos

    name: 'test (${{ matrix.os }} - py${{ matrix.python-version }})'
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.neptune_ref }}

      - name: Run tests
        uses: ./.github/actions/test-unit
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          report_job: 'test (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  unit-tests-notify:
    needs: [ test ]
    runs-on: ubuntu-latest
    if: (success() || failure()) && github.ref == 'refs/heads/dev/1.x'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.neptune_ref }}

      - name: Notify
        uses: ./.github/actions/workflow-notify
        with:
          slack-webhook: ${{ secrets.E2E_REGULAR_SLACK_WEBHOOK }}
