name: unit

on:
  workflow_call:
    inputs:
      neptune_ref:
        description: 'Reference to neptune-client branch to use while running unit tests (can be a branch, tag, or commit SHA)'
        type: string
        required: true
  workflow_dispatch:
  push:
    branches:
      - dev/1.x

jobs:
  set_neptune_ref:
    uses: ./.github/workflows/set-neptune-ref.yml
    with:
      workflow_call_input_neptune_ref: ${{ inputs.neptune_ref }}
  test:
    needs: [ set_neptune_ref ]
    timeout-minutes: 75
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu, windows]
        include:
          - python-version: "3.8"
            os: macos
          - python-version: "3.9"
            os: macos
          - python-version: "3.10"
            os: macos
          - python-version: "3.11"
            os: macos
          - python-version: "3.12"
            os: macos

    name: 'test (${{ matrix.os }} - py${{ matrix.python-version }})'
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}

      - name: Run tests
        uses: ./.github/actions/test-unit
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
          report_job: 'test (${{ matrix.os }} - py${{ matrix.python-version }})'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  unit-tests-notify:
    needs: [ test, set_neptune_ref ]
    runs-on: ubuntu-latest
    if: (success() || failure()) && (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}

      - name: Notify
        uses: ./.github/actions/workflow-notify-v2
        with:
          slack-webhook: ${{ secrets.E2E_REGULAR_SLACK_WEBHOOK }}
          neptune-ref: ${{ needs.set_neptune_ref.outputs.neptune_ref }}
